[project]
name = "pydasi"
description = "The Python interface to DASI (Data Access and Storage Interface)."
authors = [
  { name = "European Centre for Medium-Range Weather Forecasts (ECMWF)", email = "software.support@ecmwf.int" },
]
keywords = ["dasi", "ecmwf"]
dynamic = ["version"]
readme = { content-type = "text/markdown", file = "README.md" }
license = { text = "Apache License Version 2.0" }
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: Apache Software License",
  "Natural Language :: English",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Operating System :: MacOS",
  "Operating System :: Unix",
  "Operating System :: POSIX",
  "Operating System :: POSIX :: Linux",
]
requires-python = ">=3.8"
dependencies = ["cffi>=1.1.1", "pyyaml>=5.3.1", "packaging>=22.0"]

[project.optional-dependencies]
tests = ["pytest", "pytest-env"]

[project.urls]
Source = "https://github.com/ecmwf-projects/dasi"
Issues = "https://github.com/ecmwf-projects/dasi/issues"
Documentation = "https://pydasi.readthedocs.io/"
Changelog = "https://github.com/ecmwf-projects/dasi/blob/master/CHANGELOG"

[build-system]
requires = ["setuptools >= 45.0", "cffi>=1.1.1"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]
include = [
  "backend*",
  "pydasi*",
  "utils*",
]
exclude = [
  "tests*",
]
# comment out to disable scanning PEP 420 namespaces (true by default)
# namespaces = false

[tool.setuptools.package-data]
"backend.include" = ["*.h"]
"backend.libs" = ["*.so", "*.dylib", "*.dll"]

[tool.setuptools.dynamic]
version = {attr = "utils.version.__version__"}

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra --strict-markers --strict-config --capture=no"
testpaths = ["tests"]
env = ["ECKIT_SERIOUS_BUG_IS_SILENT = 1"]
xfail_strict = true
filterwarnings = ["once::Warning"]
markers = ["slow", "parallel"]

# flake8 configuration
[tool.flake8]
max-line-length = 80
extend-ignore = "E226, E501, W503"
exclude = [
  ".git",
  "__pycache__",
  ".venv",
  ".eggs",
  ".tox",
  "build",
  "_build",
  "dist",
  "docs",
]

# Black formatting
[tool.black]
line-length = 80
include = '\.pyi?$'
exclude = '''
/(
      .eggs
    | .git
    | .hg
    | .pytest_cache
    | .mypy_cache
    | .tox
    | .venv
    | _build
    | buck-out
    | build
    | dist
  )/
'''
# isort
[tool.isort]
profile = "black"
line_length = 79
multi_line_output = 3
include_trailing_comma = true
src_paths = ["src"]
virtual_env = ".venv"

[tool.pyright]
include = ["src", "tests", "tools"]
exclude = ["**/node_modules", "**/__pycache__", "experimental", "typestubs"]
defineConstant = { DEBUG = true }
venvPath = ".venv"

[tool.tox]
envlist = ["py39", "py38", "pypy3"]

reportMissingImports = true
# reportMissingTypeStubs = false

pythonVersion = "3.9"

executionEnvironments = [{ root = "src" }]
