
* Shelf store: use POSIX API rather than std::fstream?
* Clarify flush semantics (add a flush call to the API)

* Should we nuke the ReferenceKey types - are they too much complexity
* A SharedString type
    - Can be used for the Keys in various Maps
    - Remove the need for the ReferenceKey types
    - Or is this made unecessary by the small-string optimisations

* Test SplitReferenceKey
* Test SplitKey

* api/Query with std::optional<> (i.e. for listing) --> can always do full match on schema
* Throw exceptions on partial/incorrect matches on schema
